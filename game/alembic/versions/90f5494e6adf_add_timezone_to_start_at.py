"""Add timezone to start_at

Revision ID: 90f5494e6adf
Revises: f20bce8f4839
Create Date: 2025-06-09 01:53:03.598314

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "90f5494e6adf"
down_revision: Union[str, None] = "f20bce8f4839"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tournament_users")
    op.drop_table("users")
    op.drop_table("tournaments")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tournaments",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('tournaments_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("max_players", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "start_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="tournaments_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('users_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "tournament_users",
        sa.Column("tournament_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["tournament_id"],
            ["tournaments.id"],
            name=op.f("tournament_users_tournament_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("tournament_users_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "tournament_id", "user_id", name=op.f("tournament_users_pkey")
        ),
    )
    # ### end Alembic commands ###
